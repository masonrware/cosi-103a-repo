PA01 - Python Data Analysis I
due Friday 2/18 11am  on mastery.cs.brandeis.edu 
CS103a-Programs PIN:7297444


Motivation 
Many applications today provide a high level user interface that allows one to ask questions about some large (and often dynamically changing) dataset.  The registrar's website
for scheduling your courses is one such application, but so is facebook, amazon, ebay, spotify, and almost all other applications we use everyday.  In this assignment, you'll get practice loading a large dataset into Python and then answering questions about the dataset using Python with the Jupyter interface, which is a common way to explore a new dataset. You'll also work on a Python script/class to create a course search application.


Another very common feature of any software development project is that it typically involves several developers collaborating using various tools (e.g. git) to design, develop, debug, and test a new software product. This assignment wil require you to create a shared repository with your team and to have everyone in the team contribute some code to the project. For this project, you can all work on one branch. Learning how to collaborate using git and similar tools is a critical skill for modern software developers.


What to do
1. create or join a team of 3-5 students if you haven't already done so and register for github if you haven't already done so
2. select a "git captain" and have that person create a new repository based on the pa01 code given in class
3. the git captain should add all team members to the project and everyone should clone the project to their own computers.
4. you should arrange a time to meet and work on the project together, at least to decide who will do what and when
5. your team should answer the following questions using the Jupyter notebook and you should try to make your Python code as simple and easy to understand as you can, use set and list comprehensions whenever possible. 
   1. how many faculty taught COSI courses last year?
   2. what is the total number of students taking COSI courses last year?
   3. what was the median size of a COSI course last year (counting only those courses with at least 10 students)
   4. create a list of tuples (E,S) where S is a subject and E is the number of students enrolled in courses in that subject, sort it and print the top 10. This shows the top 10 subjects in terms of number of students taught.
   5. do the same as in (d) but print the top 10 subjects in terms of number of courses offered
   6. do the same as (d) but print the top 10 subjects in terms of number of faculty teaching courses in that subject
   7. list the top 20 faculty in terms of number of students they taught
   8. list the top 20 courses in terms of number of students taking that course (where you combine different sections and semesters, i.e. just use the subject and course number)
   9. Create your own interesting question (each team member creates their own) and use Python to answer that question.
6. your team should add the following methods to the Schedule class which are used to filter the list of courses
   1. title(self,phrase) -- filters courses containing the phrase in their title
   2. description(self,phrase) - filters courses containing the phrase in the description
   3. Create your own filter method (e.g. by class day or time?)
7. your team should add the following features to the course_search.py script
   1. course  -- filter by subject/coursenumber
   2. instructor -- filter by instructor email or lastname
   3. title -- filter by phrase in the title
   4. description -- filter by phrase in the description
   5. Create your own filter (each team member creates their own)
8. make sure that each team member gets to contribute to the project and to commit their own changes and push their own changes to the shared github repository.  
IMPORTANT: before you commit your changes to the Jupyter notebook file, make sure that you restart the kernel and clear all output of the Jupyter notebook before saving those changes and committing.


What and How to submit
   1. add a link to your shared repository to the team page
   2. each team member should make their own short Zoom recording (about 1-5 minutes) stored in the cloud, showing mastery of the following six skills
   
   1. running the Jupyter notebook and pointing out the code that they wrote, also show that you can create a markdown box, add text, and display it. (Jupyter)
   2. running the course_search.py app and showing the work that they did on the project and showing that their additions to the code do what they are supposed to do (PythonScript)
   3. showing the methods you wrote in the Schedule class (basic Python OOP)
   4. editing the code in VScode and setting a checkpoint on one of their contributions and stepping through their own code contributions in the schedule.py code (VScode Debugging)
   5. running pylint on their code and showing it only has a few warnings (Pylint)
   6. making a slight change to the code in VScode, and using the shell commands to commit that change and push it to github. Then visiting the github site and showing the collaboration activity (number of commits by each team member) which should be roughly balanced (Basic Github)
   3. each team member should upload links to the github repository and their Zoom movie to the PA01 problem on the Mastery-Programs site (with PIN 7297444 )
   4. the due date is Friday 2/18 before 11am (as we start grading at 11)


________________


Rubric
We wil grade this using a Specs grading approach looking for mastery of the following skills, so make sure that you demonstrate yourself mastering these skills in your movie!
   1. Github: collaborating on github with a single branch
   2. Debug: debugging using VScode
   3. Jupyter: running queries and writing markdown using Jupyter lab
   4. Python OOP: writing and calling methods for a Python class
   5. Pylint: using pylint to write clean code
   6. Python Script: modifying a console-based interactive Python script where the state is encapsulated in a Python class object
We hope and expect that everyone will demonstrate mastery of all 6 of these skills in this PA. If not, then you will have an opportunity to demonstrate mastery in later homework assignments.


For those students with more experience in Python programming, I encourage you to go beyond this assignment and do something you can add to your ePortfolio. It could help you find an internship or job. For example, you could learn to use Flask to create a web interface for the course_search app. When we get a live feed of the registrar's data later this year, it could actually be useful for Brandeis students as an alternative to using Workday to finding courses!
You won't get more points, but you will build your ePortfolio!